//Combination Sum with a twist.
//https://leetcode.com/problems/combination-sum-iii/description/
//backtraking problem
class Solution {

    vector<vector<int>> result;
    void try_combinations(vector<int>& combination,int k,int n,int start)
    {
        if(k==0 && n==0)
        {
            result.push_back(combination);
            return;
        }
        for(int i=start; i<10; i++)
        {
            combination.push_back(i);
            try_combinations(combination,k-1,n-i,i+1);
            combination.pop_back();
        }
    }
public:
    vector<vector<int>> combinationSum3(int k, int n) {
        vector<int> combination;
        try_combinations(combination,k,n,1);
        return result;
    }
};
